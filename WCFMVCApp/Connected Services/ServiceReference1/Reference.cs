//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFMVCApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceApp.Models")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Office {
            get {
                return this.OfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeField, value) != true)) {
                    this.OfficeField = value;
                    this.RaisePropertyChanged("Office");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DoWork", ReplyAction="http://tempuri.org/IMyService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DoWork", ReplyAction="http://tempuri.org/IMyService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUser", ReplyAction="http://tempuri.org/IMyService/GetAllUserResponse")]
        WCFMVCApp.ServiceReference1.Employee[] GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUser", ReplyAction="http://tempuri.org/IMyService/GetAllUserResponse")]
        System.Threading.Tasks.Task<WCFMVCApp.ServiceReference1.Employee[]> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddUser", ReplyAction="http://tempuri.org/IMyService/AddUserResponse")]
        int AddUser(WCFMVCApp.ServiceReference1.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddUser", ReplyAction="http://tempuri.org/IMyService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(WCFMVCApp.ServiceReference1.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUserById", ReplyAction="http://tempuri.org/IMyService/GetAllUserByIdResponse")]
        WCFMVCApp.ServiceReference1.Employee GetAllUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUserById", ReplyAction="http://tempuri.org/IMyService/GetAllUserByIdResponse")]
        System.Threading.Tasks.Task<WCFMVCApp.ServiceReference1.Employee> GetAllUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateUser", ReplyAction="http://tempuri.org/IMyService/UpdateUserResponse")]
        int UpdateUser(WCFMVCApp.ServiceReference1.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateUser", ReplyAction="http://tempuri.org/IMyService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(WCFMVCApp.ServiceReference1.Employee objEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteUserById", ReplyAction="http://tempuri.org/IMyService/DeleteUserByIdResponse")]
        int DeleteUserById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteUserById", ReplyAction="http://tempuri.org/IMyService/DeleteUserByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteUserByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : WCFMVCApp.ServiceReference1.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<WCFMVCApp.ServiceReference1.IMyService>, WCFMVCApp.ServiceReference1.IMyService {
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public WCFMVCApp.ServiceReference1.Employee[] GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<WCFMVCApp.ServiceReference1.Employee[]> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public int AddUser(WCFMVCApp.ServiceReference1.Employee objEmployee) {
            return base.Channel.AddUser(objEmployee);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(WCFMVCApp.ServiceReference1.Employee objEmployee) {
            return base.Channel.AddUserAsync(objEmployee);
        }
        
        public WCFMVCApp.ServiceReference1.Employee GetAllUserById(int id) {
            return base.Channel.GetAllUserById(id);
        }
        
        public System.Threading.Tasks.Task<WCFMVCApp.ServiceReference1.Employee> GetAllUserByIdAsync(int id) {
            return base.Channel.GetAllUserByIdAsync(id);
        }
        
        public int UpdateUser(WCFMVCApp.ServiceReference1.Employee objEmployee) {
            return base.Channel.UpdateUser(objEmployee);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(WCFMVCApp.ServiceReference1.Employee objEmployee) {
            return base.Channel.UpdateUserAsync(objEmployee);
        }
        
        public int DeleteUserById(int Id) {
            return base.Channel.DeleteUserById(Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserByIdAsync(int Id) {
            return base.Channel.DeleteUserByIdAsync(Id);
        }
    }
}
